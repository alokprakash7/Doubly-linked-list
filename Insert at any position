# include<bits/stdc++.h>
using namespace std;
class Node{
    public:
    int data;
    Node* prev;
    Node* next;
    
    Node(int d){
        this->data = d;
        this->prev = NULL;
        this->next = NULL;
    }
    };
    void insertAtHead(Node* &head, Node* &tail, int d){
        if(head == NULL){
            Node* temp = head;
            head = temp;
            tail = temp;
        }
        Node* temp = new Node(d);
        temp->next = head;
        head->prev = temp;
        head = temp;
    }
    void insertAtTail(Node* head, Node* &tail, int d){
        if(tail == NULL){
            Node* temp = tail;
            temp = head;
            temp = tail;
        }
        Node* temp = new Node(d);
         tail ->next = temp;
        temp->prev = tail;
        tail = temp;
        
    }
   void insertAtPosition(Node* &tail, Node* &head, int position, int d){
       if(position==1){
            insertAtHead(head, tail, d);
            return;
        }
        Node* temp = head;
        int cnt =1;
 while(cnt<position- 1){
           temp = temp->next;
           cnt++;
       }if(temp->next ==NULL){
           insertAtTail(head, tail, d);
           return;
       }
   
       Node* nodetoinsert = new Node(d);
        nodetoinsert->next= temp->next;
       temp->next->prev= nodetoinsert;
       temp->next = nodetoinsert;
       nodetoinsert->prev = temp;
    }
    void print(Node* &head){
        Node* temp = head;
        while(temp != NULL){
            cout<<temp->data<<" ";
            temp = temp->next;
        }
        cout<<endl;
    }
    
    int getLen(Node* &head){
        int len = 0;
        Node* temp = head;
        while(temp != NULL){
            len++;
            temp = temp->next;
   
       }
        return len;
    }
    int main(){
        Node * node1 = new Node(10);
        Node* head = node1;
        Node* tail = node1;
        print(head);
        insertAtHead(head, tail, 12);
        insertAtHead(head, tail, 15);
        insertAtTail(head, tail, 17);
        insertAtTail(head, tail, 20);
        insertAtTail(head, tail, 25);
        insertAtPosition(tail, head, 2, 16);
        insertAtPosition(tail, head, 3, 18);
        insertAtPosition(tail, head, 4, 22);
        print(head);
        cout<<"The length of the list is "<< getLen(head)<<endl;
      
    }
    
